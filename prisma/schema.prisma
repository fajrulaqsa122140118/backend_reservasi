datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // output   = "../client_generated"
}

model Permissions {
  id              Int              @id @default(autoincrement())
  name            String
  rolePermissions RolePermission[]
}

enum RoleType {
  USER
  ADMIN
  SUPER_ADMIN
}

model Role {
  id              Int              @id @default(autoincrement())
  name            String
  roleType        RoleType         @default(USER)
  rolePermissions RolePermission[]
  users           User[]
}

model RolePermission {
  id           Int         @id @default(autoincrement())
  roleId       Int
  role         Role        @relation(fields: [roleId], references: [id])
  permissionId Int
  permission   Permissions @relation(fields: [permissionId], references: [id])
  canRead      Boolean     @default(false)
  canWrite     Boolean     @default(false)
  canUpdate    Boolean     @default(false)
  canDelete    Boolean     @default(false)
  canRestore   Boolean     @default(false)
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String?
  roleId    Int
  role      Role      @relation(fields: [roleId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  sessions  Session[]
  logers    Loger[]
}

model Session {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

enum Process {
  CREATE
  UPDATE
  DELETE
  RESTORE
  LOGIN
  LOGOUT
}

model Loger {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  process   Process
  detail    String
  createdAt DateTime @default(now())
}

model MasterMeja  {
  id        Int      @id @default(autoincrement())
  NamaMeja  String
  Foto     String?
  Deskripsi String?
  Harga     String
  NoMeja    String
  TipeMeja  String // besar dan kecil 
  IsActive  Boolean @default(true) // true = aktif, false = tidak aktif
  Closed      Boolean @default(false) // true = closed, false = open
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  JadwalMeja JadwalMeja[]

  booking Booking[]

  JamBooking JamBooking[]
}

model JadwalMeja {
  id       Int      @id @default(autoincrement())
  mejaId  Int
  meja     MasterMeja @relation(fields: [mejaId], references: [id])
  StartTime String // "08:00"
  EndTime   String // "08:00"
  Status    String // "available", "booked", "unavailable"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?


  JamBooking JamBooking[]
}

model Booking {
  id        Int      @id @default(autoincrement())
  mejaId    Int
  meja      MasterMeja @relation(fields: [mejaId], references: [id])
  Tanggal DateTime
  Harga String
  KodeBooking String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  JamBooking JamBooking[]

  BiodataBooking BiodataBooking[]

  BuktiPembayaran BuktiPembayaran[]
}

model JamBooking {
  id        Int      @id @default(autoincrement())
  BookingId Int
  Booking   Booking  @relation(fields: [BookingId], references: [id])
  idMeja Int
  MasterMeja MasterMeja @relation(fields: [idMeja], references: [id])
  idJadwalMeja Int
  JadwalMeja  JadwalMeja @relation(fields: [idJadwalMeja], references: [id])  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model BiodataBooking{
  id        Int      @id @default(autoincrement())
  BookingId Int
  Booking   Booking  @relation(fields: [BookingId], references: [id])
  Nama      String
  NoTelp    String
  Alamat    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model BuktiPembayaran {
  id        Int      @id @default(autoincrement())
  KodeBookingID String?
  Booking   Booking?  @relation(fields: [KodeBookingID], references: [KodeBooking])
  Foto      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

model Banner {
  id        Int      @id @default(autoincrement())
  Foto      String
  NamaFoto  String?
  Judul     String
  IsActive  Boolean @default(true) // true = aktif, false = tidak aktif
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}
model Closed {
  id        Int      @id @default(autoincrement())
  startdate DateTime
  enddate   DateTime
  Deskripsi String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
}

